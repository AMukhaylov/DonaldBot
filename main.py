import random
import config
import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup as BS

bot = telebot.TeleBot(config.Token)


#   –ü—Ä–∏–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@bot.message_handler(commands=['start'])
def start(message):
    mess = f"–ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}!</b>"
    bot.send_message(message.chat.id, mess, parse_mode='html')

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    weather = types.KeyboardButton('üå§ –ü–æ–≥–æ–¥–∞')
    artur_work = types.KeyboardButton('‚ùå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ê—Ä—Ç—É—Ä?')
    course_currency = types.KeyboardButton('üí≤ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    random_wow = types.KeyboardButton('üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
    information = types.KeyboardButton('‚ùóÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')
    markup.add(weather, artur_work, course_currency, random_wow, information)

    bot.send_message(message.chat.id, "–ß—Ç–æ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å? –í—ã–±–∏—Ä–∞–π:", reply_markup=markup)


#   API dog.ceo –≥–¥–µ –º—ã –±–µ—Ä–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ —Å–æ–±–∞–∫–∏ –∏–∑ –±–ª–æ–∫–∞ "–ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?"
def get_dog():
    response = requests.get('https://dog.ceo/api/breeds/image/random').json()

    return response['message']


#   –ö–Ω–æ–ø–∫–∞ "–ü–æ–≥–æ–¥–∞"
@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':
        if message.text == 'üå§ –ü–æ–≥–æ–¥–∞':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            weather_kgs = types.KeyboardButton('üá∞üá¨ –ü–æ–≥–æ–¥–∞ –≤ –ß–æ–ª–ø–∞–Ω-–ê—Ç–µ')
            weather_perm = types.KeyboardButton('üá∑üá∫ –ü–æ–≥–æ–¥–∞ –≤ –ü–µ—Ä–º–∏')
            back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
            markup.add(weather_kgs, weather_perm, back)

            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥:', reply_markup=markup)

        #   –ö–Ω–æ–ø–∫–∞ "–ü–æ–≥–æ–¥–∞ –≤ –ß–æ–ª–ø–∞–Ω-–ê—Ç–µ"
        elif message.text == 'üá∞üá¨ –ü–æ–≥–æ–¥–∞ –≤ –ß–æ–ª–ø–∞–Ω-–ê—Ç–µ':
            r = requests.get('https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-—á–æ–ª–ø–æ–Ω-–∞—Ç–∞')
            html = BS(r.content, 'html.parser')
            for el in html.select('#content'):
                t_min = el.select('.temperature .min')[0].text
                t_max = el.select('.temperature .max')[0].text
                text = el.select('.wDescription .description')[0].text
                bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n" + t_min + ', ' + t_max + '.' + text)

        #   –ö–Ω–æ–ø–∫–∞ "–ü–æ–≥–æ–¥–∞ –≤ –ü–µ—Ä–º–∏"
        elif message.text == 'üá∑üá∫ –ü–æ–≥–æ–¥–∞ –≤ –ü–µ—Ä–º–∏':
            r = requests.get('https://sinoptik.ua/–ø–æ–≥–æ–¥–∞-–ø–µ—Ä–º—å')
            html = BS(r.content, 'html.parser')
            for el in html.select('#content'):
                t_min = el.select('.temperature .min')[0].text
                t_max = el.select('.temperature .max')[0].text
                text = el.select('.wDescription .description')[0].text
                bot.send_message(message.chat.id, "–ü–æ–≥–æ–¥–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n" + t_min + ', ' + t_max + '.' + text)

        #   –ö–Ω–æ–ø–∫–∞ "–ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ê—Ä—Ç—É—Ä?"
        elif message.text == '‚ùå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ê—Ä—Ç—É—Ä?':
            photo = open('../../Pictures/–ú–æ–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è/ArthurWork.jpg', "rb")
            bot.send_photo(message.chat.id, photo)
            bot.send_message(message.chat.id, '–î–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –æ–Ω, –≤—Å—ë –∫–∞–∫ –æ–±—ã—á–Ω–æ!ü§™')

        #   –ö–Ω–æ–ø–∫–∞ "–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ?"
        elif message.text == 'üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
            bot.send_message(message.chat.id, '–í–∞—à–µ —á–∏—Å–ª–æ: ' + str(random.randint(0, 1000)))

        #   –ö–Ω–æ–ø–∫–∞ "–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç"
        elif message.text == 'üí≤ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
            course_dollar = types.KeyboardButton('üíµ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞')
            course_som = types.KeyboardButton('üí∂ –ö—É—Ä—Å –ï–≤—Ä–æ')
            course_euro = types.KeyboardButton('üá∞üá¨ –ö—É—Ä—Å –°–æ–º')
            back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
            markup.add(course_dollar, course_som, course_euro, back)
            bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –≤—ã–ª—é—Ç—É:', reply_markup=markup)

        #   –ö–Ω–æ–ø–∫–∞ "–ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞"
        elif message.text == 'üíµ –ö—É—Ä—Å –î–æ–ª–ª–∞—Ä–∞':
            url = 'https://www.currency.me.uk/convert/usd/rub'
            r = requests.get(url)
            soup = BS(r.text, 'lxml')
            curs = soup.find("span", {"class": "mini ccyrate"}).text
            bot.send_message(message.chat.id, curs)

        #   –ö–Ω–æ–ø–∫–∞ "–ö—É—Ä—Å –ï–≤—Ä–æ"
        elif message.text == 'üí∂ –ö—É—Ä—Å –ï–≤—Ä–æ':
            url = 'https://www.currency.me.uk/convert/eur/rub'
            r = requests.get(url)
            soup = BS(r.text, 'lxml')
            curs = soup.find("span", {"class": "mini ccyrate"}).text
            bot.send_message(message.chat.id, curs)

        #   –ö–Ω–æ–ø–∫–∞ "–ö—É—Ä—Å –°–æ–º"
        elif message.text == 'üá∞üá¨ –ö—É—Ä—Å –°–æ–º':
            url = 'https://pokur.su/rub/kgs/1/'
            r = requests.get(url)
            soup = BS(r.text, 'lxml')
            curs = soup.find("div", {"class": "blockquote-classic"}).text
            bot.send_message(message.chat.id, curs)

        #   –ö–Ω–æ–ø–∫–∞ "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        elif message.text == '‚ùóÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
            course_dollar = types.KeyboardButton('ü§ñ –û –±–æ—Ç–µ')
            course_euro = types.KeyboardButton('üì¶ –ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?')
            back = types.KeyboardButton('üîô –ù–∞–∑–∞–¥')
            markup.add(course_dollar, course_euro, back)
            bot.send_message(message.chat.id, '–ß—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?', reply_markup=markup)

        #   –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
        elif message.text == 'üîô –ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
            weather = types.KeyboardButton('üå§ –ü–æ–≥–æ–¥–∞')
            artur_work = types.KeyboardButton('‚ùå –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –ê—Ä—Ç—É—Ä?')
            course_currency = types.KeyboardButton('üí≤ –ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
            random_wow = types.KeyboardButton('üî∏ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ')
            information = types.KeyboardButton('‚ùóÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

            markup.add(weather, artur_work, course_currency, random_wow, information)
            bot.send_message(message.chat.id, 'üîô –ù–∞–∑–∞–¥', reply_markup=markup)

        #   –ö–Ω–æ–ø–∫–∞ "–û –±–æ—Ç–µ"
        elif message.text == 'ü§ñ –û –±–æ—Ç–µ':
            bot.send_message(message.chat.id, f'C–æ–∑–¥–∞–Ω: 11.03.2023')
            bot.send_message(message.chat.id, f'–í–µ—Ä—Å–∏—è: 1.0')
            bot.send_message(message.chat.id, f'–ê–≤—Ç–æ—Ä: –ú—É—Ö–∞–π–ª–æ–≤ –ê.–†.')

        #   –ö–Ω–æ–ø–∫–∞ "–ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?"
        elif message.text == 'üì¶ –ß—Ç–æ –≤ –∫–æ—Ä–æ–±–∫–µ?':
            bot.send_photo(message.chat.id, photo=get_dog())


bot.polling(none_stop=True)
